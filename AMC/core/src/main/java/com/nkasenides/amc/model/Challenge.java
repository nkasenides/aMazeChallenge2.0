/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Framework: http://nkasenides.github.io/athlos
  Generated on: 12-08-2021 11:56:05
  Athlos Project Editor, v0.1.0 BETA
-------------------------------------------------------------------------------- */

package com.nkasenides.amc.model;

import com.nkasenides.athlos.proto.Transmittable;
import com.nkasenides.amc.proto.*;
import com.nkasenides.athlos.model.*;

public class Challenge implements Transmittable<ChallengeProto.Builder> {
    private boolean canJoinAfterStart;    
    private boolean canStepOnEachOther;    
    private PickableIntensity penalties;    
    private BackgroundImage backgroundImage;    
    private String description;    
    private AmazeColor lineColor;    
    private boolean canRepeat;    
    private long createdOn;    
    private boolean hasQuestionnaire;    
    private Difficulty difficulty;    
    private int apiVersion;    
    private int maxActivePlayers;    
    private Grid grid;    
    private Audio backgroundAudio;    
    private int minActivePlayers;    
    private String name;    
    private long startTime;    
    private long endTime;    
    private String id;    
    private PickableIntensity rewards;    
    private String createdByID;    
    private Algorithm algorithm;    

    public boolean isCanJoinAfterStart() {    
        return canJoinAfterStart;        
    }    
    
    public boolean isCanStepOnEachOther() {    
        return canStepOnEachOther;        
    }    
    
    public PickableIntensity getPenalties() {    
        return penalties;        
    }    
    
    public BackgroundImage getBackgroundImage() {    
        return backgroundImage;        
    }    
    
    public String getDescription() {    
        return description;        
    }    
    
    public AmazeColor getLineColor() {    
        return lineColor;        
    }    
    
    public boolean isCanRepeat() {    
        return canRepeat;        
    }    
    
    public long getCreatedOn() {    
        return createdOn;        
    }    
    
    public boolean isHasQuestionnaire() {    
        return hasQuestionnaire;        
    }    
    
    public Difficulty getDifficulty() {    
        return difficulty;        
    }    
    
    public int getApiVersion() {    
        return apiVersion;        
    }    
    
    public int getMaxActivePlayers() {    
        return maxActivePlayers;        
    }    
    
    public Grid getGrid() {    
        return grid;        
    }    
    
    public Audio getBackgroundAudio() {    
        return backgroundAudio;        
    }    
    
    public int getMinActivePlayers() {    
        return minActivePlayers;        
    }    
    
    public String getName() {    
        return name;        
    }    
    
    public long getStartTime() {    
        return startTime;        
    }    
    
    public long getEndTime() {    
        return endTime;        
    }    
    
    public String getId() {    
        return id;        
    }    
    
    public PickableIntensity getRewards() {    
        return rewards;        
    }    
    
    public String getCreatedByID() {    
        return createdByID;        
    }    
    
    public Algorithm getAlgorithm() {    
        return algorithm;        
    }    
    

    public void setCanJoinAfterStart(boolean canJoinAfterStart) {    
        this.canJoinAfterStart = canJoinAfterStart;        
    }    
    
    public void setCanStepOnEachOther(boolean canStepOnEachOther) {    
        this.canStepOnEachOther = canStepOnEachOther;        
    }    
    
    public void setPenalties(PickableIntensity penalties) {    
        this.penalties = penalties;        
    }    
    
    public void setBackgroundImage(BackgroundImage backgroundImage) {    
        this.backgroundImage = backgroundImage;        
    }    
    
    public void setDescription(String description) {    
        this.description = description;        
    }    
    
    public void setLineColor(AmazeColor lineColor) {    
        this.lineColor = lineColor;        
    }    
    
    public void setCanRepeat(boolean canRepeat) {    
        this.canRepeat = canRepeat;        
    }    
    
    public void setCreatedOn(long createdOn) {    
        this.createdOn = createdOn;        
    }    
    
    public void setHasQuestionnaire(boolean hasQuestionnaire) {    
        this.hasQuestionnaire = hasQuestionnaire;        
    }    
    
    public void setDifficulty(Difficulty difficulty) {    
        this.difficulty = difficulty;        
    }    
    
    public void setApiVersion(int apiVersion) {    
        this.apiVersion = apiVersion;        
    }    
    
    public void setMaxActivePlayers(int maxActivePlayers) {    
        this.maxActivePlayers = maxActivePlayers;        
    }    
    
    public void setGrid(Grid grid) {    
        this.grid = grid;        
    }    
    
    public void setBackgroundAudio(Audio backgroundAudio) {    
        this.backgroundAudio = backgroundAudio;        
    }    
    
    public void setMinActivePlayers(int minActivePlayers) {    
        this.minActivePlayers = minActivePlayers;        
    }    
    
    public void setName(String name) {    
        this.name = name;        
    }    
    
    public void setStartTime(long startTime) {    
        this.startTime = startTime;        
    }    
    
    public void setEndTime(long endTime) {    
        this.endTime = endTime;        
    }    
    
    public void setId(String id) {    
        this.id = id;        
    }    
    
    public void setRewards(PickableIntensity rewards) {    
        this.rewards = rewards;        
    }    
    
    public void setCreatedByID(String createdByID) {    
        this.createdByID = createdByID;        
    }    
    
    public void setAlgorithm(Algorithm algorithm) {    
        this.algorithm = algorithm;        
    }    
    

    @Override    
    public com.nkasenides.amc.proto.ChallengeProto.Builder toProto() {    
        com.nkasenides.amc.proto.ChallengeProto.Builder protoBuilder = com.nkasenides.amc.proto.ChallengeProto.newBuilder();        
        protoBuilder.setCanJoinAfterStart(canJoinAfterStart);        
        protoBuilder.setCanStepOnEachOther(canStepOnEachOther);        
        protoBuilder.setPenalties(penalties);        
        protoBuilder.setBackgroundImage(backgroundImage);        
        protoBuilder.setDescription(description);        
        protoBuilder.setLineColor(lineColor);        
        protoBuilder.setCanRepeat(canRepeat);        
        protoBuilder.setCreatedOn(createdOn);        
        protoBuilder.setHasQuestionnaire(hasQuestionnaire);        
        protoBuilder.setDifficulty(difficulty);        
        protoBuilder.setApiVersion(apiVersion);        
        protoBuilder.setMaxActivePlayers(maxActivePlayers);        
        protoBuilder.setGrid(grid.toProto().build());        
        protoBuilder.setBackgroundAudio(backgroundAudio);        
        protoBuilder.setMinActivePlayers(minActivePlayers);        
        protoBuilder.setName(name);        
        protoBuilder.setStartTime(startTime);        
        protoBuilder.setEndTime(endTime);        
        protoBuilder.setId(id);        
        protoBuilder.setRewards(rewards);        
        protoBuilder.setCreatedByID(createdByID);        
        protoBuilder.setAlgorithm(algorithm);        
        return protoBuilder;        
    }    
    

}
