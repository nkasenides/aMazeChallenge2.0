// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto/AMCProto.proto

package com.nkasenides.amc.proto;

/**
 * Protobuf type {@code com.nkasenides.amc.proto.GameProto}
 */
public final class GameProto extends
    com.google.protobuf.GeneratedMessageV3 implements com.nkasenides.athlos.proto.Modelable<com.nkasenides.amc.model.Game> , 
    // @@protoc_insertion_point(message_implements:com.nkasenides.amc.proto.GameProto)
    GameProtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GameProto.newBuilder() to construct.
  private GameProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GameProto() {
    challengeID_ = "";
    finishedPlayers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    pickables_ = java.util.Collections.emptyList();
    id_ = "";
    queuedPlayers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    waitingPlayers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new GameProto();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GameProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            lastUpdated_ = input.readUInt64();
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            challengeID_ = s;
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              finishedPlayers_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            finishedPlayers_.add(s);
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              pickables_ = new java.util.ArrayList<PickableEntityProto>();
              mutable_bitField0_ |= 0x00000002;
            }
            pickables_.add(
                input.readMessage(PickableEntityProto.parser(), extensionRegistry));
            break;
          }
          case 42: {
            String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 50: {
            String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              queuedPlayers_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000004;
            }
            queuedPlayers_.add(s);
            break;
          }
          case 56: {

            counter_ = input.readUInt64();
            break;
          }
          case 66: {
            String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              waitingPlayers_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000008;
            }
            waitingPlayers_.add(s);
            break;
          }
          case 72: {

            lastExecutionTime_ = input.readUInt64();
            break;
          }
          case 82: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              allPlayers_ = com.google.protobuf.MapField.newMapField(
                  AllPlayersDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000010;
            }
            com.google.protobuf.MapEntry<String, AMCPlayerProto>
            allPlayers__ = input.readMessage(
                AllPlayersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            allPlayers_.getMutableMap().put(
                allPlayers__.getKey(), allPlayers__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        finishedPlayers_ = finishedPlayers_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        pickables_ = java.util.Collections.unmodifiableList(pickables_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        queuedPlayers_ = queuedPlayers_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        waitingPlayers_ = waitingPlayers_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return AMCProto.internal_static_com_nkasenides_amc_proto_GameProto_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 10:
        return internalGetAllPlayers();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return AMCProto.internal_static_com_nkasenides_amc_proto_GameProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            GameProto.class, Builder.class);
  }

  public static final int LASTUPDATED_FIELD_NUMBER = 1;
  private long lastUpdated_;
  /**
   * <code>uint64 lastUpdated = 1;</code>
   * @return The lastUpdated.
   */
  @Override
  public long getLastUpdated() {
    return lastUpdated_;
  }

  public static final int CHALLENGEID_FIELD_NUMBER = 2;
  private volatile Object challengeID_;
  /**
   * <code>string challengeID = 2;</code>
   * @return The challengeID.
   */
  @Override
  public String getChallengeID() {
    Object ref = challengeID_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      challengeID_ = s;
      return s;
    }
  }
  /**
   * <code>string challengeID = 2;</code>
   * @return The bytes for challengeID.
   */
  @Override
  public com.google.protobuf.ByteString
      getChallengeIDBytes() {
    Object ref = challengeID_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      challengeID_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FINISHEDPLAYERS_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList finishedPlayers_;
  /**
   * <code>repeated string finishedPlayers = 3;</code>
   * @return A list containing the finishedPlayers.
   */
  public com.google.protobuf.ProtocolStringList
      getFinishedPlayersList() {
    return finishedPlayers_;
  }
  /**
   * <code>repeated string finishedPlayers = 3;</code>
   * @return The count of finishedPlayers.
   */
  public int getFinishedPlayersCount() {
    return finishedPlayers_.size();
  }
  /**
   * <code>repeated string finishedPlayers = 3;</code>
   * @param index The index of the element to return.
   * @return The finishedPlayers at the given index.
   */
  public String getFinishedPlayers(int index) {
    return finishedPlayers_.get(index);
  }
  /**
   * <code>repeated string finishedPlayers = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the finishedPlayers at the given index.
   */
  public com.google.protobuf.ByteString
      getFinishedPlayersBytes(int index) {
    return finishedPlayers_.getByteString(index);
  }

  public static final int PICKABLES_FIELD_NUMBER = 4;
  private java.util.List<PickableEntityProto> pickables_;
  /**
   * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
   */
  @Override
  public java.util.List<PickableEntityProto> getPickablesList() {
    return pickables_;
  }
  /**
   * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
   */
  @Override
  public java.util.List<? extends PickableEntityProtoOrBuilder>
      getPickablesOrBuilderList() {
    return pickables_;
  }
  /**
   * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
   */
  @Override
  public int getPickablesCount() {
    return pickables_.size();
  }
  /**
   * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
   */
  @Override
  public PickableEntityProto getPickables(int index) {
    return pickables_.get(index);
  }
  /**
   * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
   */
  @Override
  public PickableEntityProtoOrBuilder getPickablesOrBuilder(
      int index) {
    return pickables_.get(index);
  }

  public static final int ID_FIELD_NUMBER = 5;
  private volatile Object id_;
  /**
   * <code>string id = 5;</code>
   * @return The id.
   */
  @Override
  public String getId() {
    Object ref = id_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <code>string id = 5;</code>
   * @return The bytes for id.
   */
  @Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    Object ref = id_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int QUEUEDPLAYERS_FIELD_NUMBER = 6;
  private com.google.protobuf.LazyStringList queuedPlayers_;
  /**
   * <code>repeated string queuedPlayers = 6;</code>
   * @return A list containing the queuedPlayers.
   */
  public com.google.protobuf.ProtocolStringList
      getQueuedPlayersList() {
    return queuedPlayers_;
  }
  /**
   * <code>repeated string queuedPlayers = 6;</code>
   * @return The count of queuedPlayers.
   */
  public int getQueuedPlayersCount() {
    return queuedPlayers_.size();
  }
  /**
   * <code>repeated string queuedPlayers = 6;</code>
   * @param index The index of the element to return.
   * @return The queuedPlayers at the given index.
   */
  public String getQueuedPlayers(int index) {
    return queuedPlayers_.get(index);
  }
  /**
   * <code>repeated string queuedPlayers = 6;</code>
   * @param index The index of the value to return.
   * @return The bytes of the queuedPlayers at the given index.
   */
  public com.google.protobuf.ByteString
      getQueuedPlayersBytes(int index) {
    return queuedPlayers_.getByteString(index);
  }

  public static final int COUNTER_FIELD_NUMBER = 7;
  private long counter_;
  /**
   * <code>uint64 counter = 7;</code>
   * @return The counter.
   */
  @Override
  public long getCounter() {
    return counter_;
  }

  public static final int WAITINGPLAYERS_FIELD_NUMBER = 8;
  private com.google.protobuf.LazyStringList waitingPlayers_;
  /**
   * <code>repeated string waitingPlayers = 8;</code>
   * @return A list containing the waitingPlayers.
   */
  public com.google.protobuf.ProtocolStringList
      getWaitingPlayersList() {
    return waitingPlayers_;
  }
  /**
   * <code>repeated string waitingPlayers = 8;</code>
   * @return The count of waitingPlayers.
   */
  public int getWaitingPlayersCount() {
    return waitingPlayers_.size();
  }
  /**
   * <code>repeated string waitingPlayers = 8;</code>
   * @param index The index of the element to return.
   * @return The waitingPlayers at the given index.
   */
  public String getWaitingPlayers(int index) {
    return waitingPlayers_.get(index);
  }
  /**
   * <code>repeated string waitingPlayers = 8;</code>
   * @param index The index of the value to return.
   * @return The bytes of the waitingPlayers at the given index.
   */
  public com.google.protobuf.ByteString
      getWaitingPlayersBytes(int index) {
    return waitingPlayers_.getByteString(index);
  }

  public static final int LASTEXECUTIONTIME_FIELD_NUMBER = 9;
  private long lastExecutionTime_;
  /**
   * <code>uint64 lastExecutionTime = 9;</code>
   * @return The lastExecutionTime.
   */
  @Override
  public long getLastExecutionTime() {
    return lastExecutionTime_;
  }

  public static final int ALLPLAYERS_FIELD_NUMBER = 10;
  private static final class AllPlayersDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, AMCPlayerProto> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, AMCPlayerProto>newDefaultInstance(
                AMCProto.internal_static_com_nkasenides_amc_proto_GameProto_AllPlayersEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                AMCPlayerProto.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      String, AMCPlayerProto> allPlayers_;
  private com.google.protobuf.MapField<String, AMCPlayerProto>
  internalGetAllPlayers() {
    if (allPlayers_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          AllPlayersDefaultEntryHolder.defaultEntry);
    }
    return allPlayers_;
  }

  public int getAllPlayersCount() {
    return internalGetAllPlayers().getMap().size();
  }
  /**
   * <code>map&lt;string, .com.nkasenides.amc.proto.AMCPlayerProto&gt; allPlayers = 10;</code>
   */

  @Override
  public boolean containsAllPlayers(
      String key) {
    if (key == null) { throw new NullPointerException(); }
    return internalGetAllPlayers().getMap().containsKey(key);
  }
  /**
   * Use {@link #getAllPlayersMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, AMCPlayerProto> getAllPlayers() {
    return getAllPlayersMap();
  }
  /**
   * <code>map&lt;string, .com.nkasenides.amc.proto.AMCPlayerProto&gt; allPlayers = 10;</code>
   */
  @Override

  public java.util.Map<String, AMCPlayerProto> getAllPlayersMap() {
    return internalGetAllPlayers().getMap();
  }
  /**
   * <code>map&lt;string, .com.nkasenides.amc.proto.AMCPlayerProto&gt; allPlayers = 10;</code>
   */
  @Override

  public AMCPlayerProto getAllPlayersOrDefault(
      String key,
      AMCPlayerProto defaultValue) {
    if (key == null) { throw new NullPointerException(); }
    java.util.Map<String, AMCPlayerProto> map =
        internalGetAllPlayers().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .com.nkasenides.amc.proto.AMCPlayerProto&gt; allPlayers = 10;</code>
   */
  @Override

  public AMCPlayerProto getAllPlayersOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException(); }
    java.util.Map<String, AMCPlayerProto> map =
        internalGetAllPlayers().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (lastUpdated_ != 0L) {
      output.writeUInt64(1, lastUpdated_);
    }
    if (!getChallengeIDBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, challengeID_);
    }
    for (int i = 0; i < finishedPlayers_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, finishedPlayers_.getRaw(i));
    }
    for (int i = 0; i < pickables_.size(); i++) {
      output.writeMessage(4, pickables_.get(i));
    }
    if (!getIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, id_);
    }
    for (int i = 0; i < queuedPlayers_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, queuedPlayers_.getRaw(i));
    }
    if (counter_ != 0L) {
      output.writeUInt64(7, counter_);
    }
    for (int i = 0; i < waitingPlayers_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, waitingPlayers_.getRaw(i));
    }
    if (lastExecutionTime_ != 0L) {
      output.writeUInt64(9, lastExecutionTime_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetAllPlayers(),
        AllPlayersDefaultEntryHolder.defaultEntry,
        10);
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (lastUpdated_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, lastUpdated_);
    }
    if (!getChallengeIDBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, challengeID_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < finishedPlayers_.size(); i++) {
        dataSize += computeStringSizeNoTag(finishedPlayers_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getFinishedPlayersList().size();
    }
    for (int i = 0; i < pickables_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, pickables_.get(i));
    }
    if (!getIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, id_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < queuedPlayers_.size(); i++) {
        dataSize += computeStringSizeNoTag(queuedPlayers_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getQueuedPlayersList().size();
    }
    if (counter_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(7, counter_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < waitingPlayers_.size(); i++) {
        dataSize += computeStringSizeNoTag(waitingPlayers_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getWaitingPlayersList().size();
    }
    if (lastExecutionTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(9, lastExecutionTime_);
    }
    for (java.util.Map.Entry<String, AMCPlayerProto> entry
         : internalGetAllPlayers().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, AMCPlayerProto>
      allPlayers__ = AllPlayersDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, allPlayers__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof GameProto)) {
      return super.equals(obj);
    }
    GameProto other = (GameProto) obj;

    if (getLastUpdated()
        != other.getLastUpdated()) return false;
    if (!getChallengeID()
        .equals(other.getChallengeID())) return false;
    if (!getFinishedPlayersList()
        .equals(other.getFinishedPlayersList())) return false;
    if (!getPickablesList()
        .equals(other.getPickablesList())) return false;
    if (!getId()
        .equals(other.getId())) return false;
    if (!getQueuedPlayersList()
        .equals(other.getQueuedPlayersList())) return false;
    if (getCounter()
        != other.getCounter()) return false;
    if (!getWaitingPlayersList()
        .equals(other.getWaitingPlayersList())) return false;
    if (getLastExecutionTime()
        != other.getLastExecutionTime()) return false;
    if (!internalGetAllPlayers().equals(
        other.internalGetAllPlayers())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + LASTUPDATED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLastUpdated());
    hash = (37 * hash) + CHALLENGEID_FIELD_NUMBER;
    hash = (53 * hash) + getChallengeID().hashCode();
    if (getFinishedPlayersCount() > 0) {
      hash = (37 * hash) + FINISHEDPLAYERS_FIELD_NUMBER;
      hash = (53 * hash) + getFinishedPlayersList().hashCode();
    }
    if (getPickablesCount() > 0) {
      hash = (37 * hash) + PICKABLES_FIELD_NUMBER;
      hash = (53 * hash) + getPickablesList().hashCode();
    }
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    if (getQueuedPlayersCount() > 0) {
      hash = (37 * hash) + QUEUEDPLAYERS_FIELD_NUMBER;
      hash = (53 * hash) + getQueuedPlayersList().hashCode();
    }
    hash = (37 * hash) + COUNTER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCounter());
    if (getWaitingPlayersCount() > 0) {
      hash = (37 * hash) + WAITINGPLAYERS_FIELD_NUMBER;
      hash = (53 * hash) + getWaitingPlayersList().hashCode();
    }
    hash = (37 * hash) + LASTEXECUTIONTIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLastExecutionTime());
    if (!internalGetAllPlayers().getMap().isEmpty()) {
      hash = (37 * hash) + ALLPLAYERS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetAllPlayers().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static GameProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GameProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GameProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GameProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GameProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GameProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GameProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static GameProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static GameProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static GameProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static GameProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static GameProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(GameProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.nkasenides.amc.proto.GameProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.nkasenides.amc.proto.GameProto)
      GameProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return AMCProto.internal_static_com_nkasenides_amc_proto_GameProto_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 10:
          return internalGetAllPlayers();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 10:
          return internalGetMutableAllPlayers();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return AMCProto.internal_static_com_nkasenides_amc_proto_GameProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GameProto.class, Builder.class);
    }

    // Construct using com.nkasenides.amc.proto.GameProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPickablesFieldBuilder();
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      lastUpdated_ = 0L;

      challengeID_ = "";

      finishedPlayers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (pickablesBuilder_ == null) {
        pickables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        pickablesBuilder_.clear();
      }
      id_ = "";

      queuedPlayers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      counter_ = 0L;

      waitingPlayers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      lastExecutionTime_ = 0L;

      internalGetMutableAllPlayers().clear();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return AMCProto.internal_static_com_nkasenides_amc_proto_GameProto_descriptor;
    }

    @Override
    public GameProto getDefaultInstanceForType() {
      return GameProto.getDefaultInstance();
    }

    @Override
    public GameProto build() {
      GameProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public GameProto buildPartial() {
      GameProto result = new GameProto(this);
      int from_bitField0_ = bitField0_;
      result.lastUpdated_ = lastUpdated_;
      result.challengeID_ = challengeID_;
      if (((bitField0_ & 0x00000001) != 0)) {
        finishedPlayers_ = finishedPlayers_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.finishedPlayers_ = finishedPlayers_;
      if (pickablesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          pickables_ = java.util.Collections.unmodifiableList(pickables_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.pickables_ = pickables_;
      } else {
        result.pickables_ = pickablesBuilder_.build();
      }
      result.id_ = id_;
      if (((bitField0_ & 0x00000004) != 0)) {
        queuedPlayers_ = queuedPlayers_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.queuedPlayers_ = queuedPlayers_;
      result.counter_ = counter_;
      if (((bitField0_ & 0x00000008) != 0)) {
        waitingPlayers_ = waitingPlayers_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.waitingPlayers_ = waitingPlayers_;
      result.lastExecutionTime_ = lastExecutionTime_;
      result.allPlayers_ = internalGetAllPlayers();
      result.allPlayers_.makeImmutable();
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof GameProto) {
        return mergeFrom((GameProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(GameProto other) {
      if (other == GameProto.getDefaultInstance()) return this;
      if (other.getLastUpdated() != 0L) {
        setLastUpdated(other.getLastUpdated());
      }
      if (!other.getChallengeID().isEmpty()) {
        challengeID_ = other.challengeID_;
        onChanged();
      }
      if (!other.finishedPlayers_.isEmpty()) {
        if (finishedPlayers_.isEmpty()) {
          finishedPlayers_ = other.finishedPlayers_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureFinishedPlayersIsMutable();
          finishedPlayers_.addAll(other.finishedPlayers_);
        }
        onChanged();
      }
      if (pickablesBuilder_ == null) {
        if (!other.pickables_.isEmpty()) {
          if (pickables_.isEmpty()) {
            pickables_ = other.pickables_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePickablesIsMutable();
            pickables_.addAll(other.pickables_);
          }
          onChanged();
        }
      } else {
        if (!other.pickables_.isEmpty()) {
          if (pickablesBuilder_.isEmpty()) {
            pickablesBuilder_.dispose();
            pickablesBuilder_ = null;
            pickables_ = other.pickables_;
            bitField0_ = (bitField0_ & ~0x00000002);
            pickablesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPickablesFieldBuilder() : null;
          } else {
            pickablesBuilder_.addAllMessages(other.pickables_);
          }
        }
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (!other.queuedPlayers_.isEmpty()) {
        if (queuedPlayers_.isEmpty()) {
          queuedPlayers_ = other.queuedPlayers_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureQueuedPlayersIsMutable();
          queuedPlayers_.addAll(other.queuedPlayers_);
        }
        onChanged();
      }
      if (other.getCounter() != 0L) {
        setCounter(other.getCounter());
      }
      if (!other.waitingPlayers_.isEmpty()) {
        if (waitingPlayers_.isEmpty()) {
          waitingPlayers_ = other.waitingPlayers_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureWaitingPlayersIsMutable();
          waitingPlayers_.addAll(other.waitingPlayers_);
        }
        onChanged();
      }
      if (other.getLastExecutionTime() != 0L) {
        setLastExecutionTime(other.getLastExecutionTime());
      }
      internalGetMutableAllPlayers().mergeFrom(
          other.internalGetAllPlayers());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      GameProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (GameProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long lastUpdated_ ;
    /**
     * <code>uint64 lastUpdated = 1;</code>
     * @return The lastUpdated.
     */
    @Override
    public long getLastUpdated() {
      return lastUpdated_;
    }
    /**
     * <code>uint64 lastUpdated = 1;</code>
     * @param value The lastUpdated to set.
     * @return This builder for chaining.
     */
    public Builder setLastUpdated(long value) {
      
      lastUpdated_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 lastUpdated = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLastUpdated() {
      
      lastUpdated_ = 0L;
      onChanged();
      return this;
    }

    private Object challengeID_ = "";
    /**
     * <code>string challengeID = 2;</code>
     * @return The challengeID.
     */
    public String getChallengeID() {
      Object ref = challengeID_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        challengeID_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string challengeID = 2;</code>
     * @return The bytes for challengeID.
     */
    public com.google.protobuf.ByteString
        getChallengeIDBytes() {
      Object ref = challengeID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        challengeID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string challengeID = 2;</code>
     * @param value The challengeID to set.
     * @return This builder for chaining.
     */
    public Builder setChallengeID(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      challengeID_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string challengeID = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearChallengeID() {
      
      challengeID_ = getDefaultInstance().getChallengeID();
      onChanged();
      return this;
    }
    /**
     * <code>string challengeID = 2;</code>
     * @param value The bytes for challengeID to set.
     * @return This builder for chaining.
     */
    public Builder setChallengeIDBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      challengeID_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList finishedPlayers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureFinishedPlayersIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        finishedPlayers_ = new com.google.protobuf.LazyStringArrayList(finishedPlayers_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated string finishedPlayers = 3;</code>
     * @return A list containing the finishedPlayers.
     */
    public com.google.protobuf.ProtocolStringList
        getFinishedPlayersList() {
      return finishedPlayers_.getUnmodifiableView();
    }
    /**
     * <code>repeated string finishedPlayers = 3;</code>
     * @return The count of finishedPlayers.
     */
    public int getFinishedPlayersCount() {
      return finishedPlayers_.size();
    }
    /**
     * <code>repeated string finishedPlayers = 3;</code>
     * @param index The index of the element to return.
     * @return The finishedPlayers at the given index.
     */
    public String getFinishedPlayers(int index) {
      return finishedPlayers_.get(index);
    }
    /**
     * <code>repeated string finishedPlayers = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the finishedPlayers at the given index.
     */
    public com.google.protobuf.ByteString
        getFinishedPlayersBytes(int index) {
      return finishedPlayers_.getByteString(index);
    }
    /**
     * <code>repeated string finishedPlayers = 3;</code>
     * @param index The index to set the value at.
     * @param value The finishedPlayers to set.
     * @return This builder for chaining.
     */
    public Builder setFinishedPlayers(
        int index, String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureFinishedPlayersIsMutable();
      finishedPlayers_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string finishedPlayers = 3;</code>
     * @param value The finishedPlayers to add.
     * @return This builder for chaining.
     */
    public Builder addFinishedPlayers(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureFinishedPlayersIsMutable();
      finishedPlayers_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string finishedPlayers = 3;</code>
     * @param values The finishedPlayers to add.
     * @return This builder for chaining.
     */
    public Builder addAllFinishedPlayers(
        Iterable<String> values) {
      ensureFinishedPlayersIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, finishedPlayers_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string finishedPlayers = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearFinishedPlayers() {
      finishedPlayers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string finishedPlayers = 3;</code>
     * @param value The bytes of the finishedPlayers to add.
     * @return This builder for chaining.
     */
    public Builder addFinishedPlayersBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureFinishedPlayersIsMutable();
      finishedPlayers_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<PickableEntityProto> pickables_ =
      java.util.Collections.emptyList();
    private void ensurePickablesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        pickables_ = new java.util.ArrayList<PickableEntityProto>(pickables_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        PickableEntityProto, PickableEntityProto.Builder, PickableEntityProtoOrBuilder> pickablesBuilder_;

    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public java.util.List<PickableEntityProto> getPickablesList() {
      if (pickablesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(pickables_);
      } else {
        return pickablesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public int getPickablesCount() {
      if (pickablesBuilder_ == null) {
        return pickables_.size();
      } else {
        return pickablesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public PickableEntityProto getPickables(int index) {
      if (pickablesBuilder_ == null) {
        return pickables_.get(index);
      } else {
        return pickablesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public Builder setPickables(
        int index, PickableEntityProto value) {
      if (pickablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePickablesIsMutable();
        pickables_.set(index, value);
        onChanged();
      } else {
        pickablesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public Builder setPickables(
        int index, PickableEntityProto.Builder builderForValue) {
      if (pickablesBuilder_ == null) {
        ensurePickablesIsMutable();
        pickables_.set(index, builderForValue.build());
        onChanged();
      } else {
        pickablesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public Builder addPickables(PickableEntityProto value) {
      if (pickablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePickablesIsMutable();
        pickables_.add(value);
        onChanged();
      } else {
        pickablesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public Builder addPickables(
        int index, PickableEntityProto value) {
      if (pickablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePickablesIsMutable();
        pickables_.add(index, value);
        onChanged();
      } else {
        pickablesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public Builder addPickables(
        PickableEntityProto.Builder builderForValue) {
      if (pickablesBuilder_ == null) {
        ensurePickablesIsMutable();
        pickables_.add(builderForValue.build());
        onChanged();
      } else {
        pickablesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public Builder addPickables(
        int index, PickableEntityProto.Builder builderForValue) {
      if (pickablesBuilder_ == null) {
        ensurePickablesIsMutable();
        pickables_.add(index, builderForValue.build());
        onChanged();
      } else {
        pickablesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public Builder addAllPickables(
        Iterable<? extends PickableEntityProto> values) {
      if (pickablesBuilder_ == null) {
        ensurePickablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pickables_);
        onChanged();
      } else {
        pickablesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public Builder clearPickables() {
      if (pickablesBuilder_ == null) {
        pickables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        pickablesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public Builder removePickables(int index) {
      if (pickablesBuilder_ == null) {
        ensurePickablesIsMutable();
        pickables_.remove(index);
        onChanged();
      } else {
        pickablesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public PickableEntityProto.Builder getPickablesBuilder(
        int index) {
      return getPickablesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public PickableEntityProtoOrBuilder getPickablesOrBuilder(
        int index) {
      if (pickablesBuilder_ == null) {
        return pickables_.get(index);  } else {
        return pickablesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public java.util.List<? extends PickableEntityProtoOrBuilder>
         getPickablesOrBuilderList() {
      if (pickablesBuilder_ != null) {
        return pickablesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(pickables_);
      }
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public PickableEntityProto.Builder addPickablesBuilder() {
      return getPickablesFieldBuilder().addBuilder(
          PickableEntityProto.getDefaultInstance());
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public PickableEntityProto.Builder addPickablesBuilder(
        int index) {
      return getPickablesFieldBuilder().addBuilder(
          index, PickableEntityProto.getDefaultInstance());
    }
    /**
     * <code>repeated .com.nkasenides.amc.proto.PickableEntityProto pickables = 4;</code>
     */
    public java.util.List<PickableEntityProto.Builder>
         getPickablesBuilderList() {
      return getPickablesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        PickableEntityProto, PickableEntityProto.Builder, PickableEntityProtoOrBuilder>
        getPickablesFieldBuilder() {
      if (pickablesBuilder_ == null) {
        pickablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            PickableEntityProto, PickableEntityProto.Builder, PickableEntityProtoOrBuilder>(
                pickables_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        pickables_ = null;
      }
      return pickablesBuilder_;
    }

    private Object id_ = "";
    /**
     * <code>string id = 5;</code>
     * @return The id.
     */
    public String getId() {
      Object ref = id_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string id = 5;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string id = 5;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string id = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <code>string id = 5;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList queuedPlayers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureQueuedPlayersIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        queuedPlayers_ = new com.google.protobuf.LazyStringArrayList(queuedPlayers_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <code>repeated string queuedPlayers = 6;</code>
     * @return A list containing the queuedPlayers.
     */
    public com.google.protobuf.ProtocolStringList
        getQueuedPlayersList() {
      return queuedPlayers_.getUnmodifiableView();
    }
    /**
     * <code>repeated string queuedPlayers = 6;</code>
     * @return The count of queuedPlayers.
     */
    public int getQueuedPlayersCount() {
      return queuedPlayers_.size();
    }
    /**
     * <code>repeated string queuedPlayers = 6;</code>
     * @param index The index of the element to return.
     * @return The queuedPlayers at the given index.
     */
    public String getQueuedPlayers(int index) {
      return queuedPlayers_.get(index);
    }
    /**
     * <code>repeated string queuedPlayers = 6;</code>
     * @param index The index of the value to return.
     * @return The bytes of the queuedPlayers at the given index.
     */
    public com.google.protobuf.ByteString
        getQueuedPlayersBytes(int index) {
      return queuedPlayers_.getByteString(index);
    }
    /**
     * <code>repeated string queuedPlayers = 6;</code>
     * @param index The index to set the value at.
     * @param value The queuedPlayers to set.
     * @return This builder for chaining.
     */
    public Builder setQueuedPlayers(
        int index, String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureQueuedPlayersIsMutable();
      queuedPlayers_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string queuedPlayers = 6;</code>
     * @param value The queuedPlayers to add.
     * @return This builder for chaining.
     */
    public Builder addQueuedPlayers(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureQueuedPlayersIsMutable();
      queuedPlayers_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string queuedPlayers = 6;</code>
     * @param values The queuedPlayers to add.
     * @return This builder for chaining.
     */
    public Builder addAllQueuedPlayers(
        Iterable<String> values) {
      ensureQueuedPlayersIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, queuedPlayers_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string queuedPlayers = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearQueuedPlayers() {
      queuedPlayers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string queuedPlayers = 6;</code>
     * @param value The bytes of the queuedPlayers to add.
     * @return This builder for chaining.
     */
    public Builder addQueuedPlayersBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureQueuedPlayersIsMutable();
      queuedPlayers_.add(value);
      onChanged();
      return this;
    }

    private long counter_ ;
    /**
     * <code>uint64 counter = 7;</code>
     * @return The counter.
     */
    @Override
    public long getCounter() {
      return counter_;
    }
    /**
     * <code>uint64 counter = 7;</code>
     * @param value The counter to set.
     * @return This builder for chaining.
     */
    public Builder setCounter(long value) {
      
      counter_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 counter = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearCounter() {
      
      counter_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList waitingPlayers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureWaitingPlayersIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        waitingPlayers_ = new com.google.protobuf.LazyStringArrayList(waitingPlayers_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <code>repeated string waitingPlayers = 8;</code>
     * @return A list containing the waitingPlayers.
     */
    public com.google.protobuf.ProtocolStringList
        getWaitingPlayersList() {
      return waitingPlayers_.getUnmodifiableView();
    }
    /**
     * <code>repeated string waitingPlayers = 8;</code>
     * @return The count of waitingPlayers.
     */
    public int getWaitingPlayersCount() {
      return waitingPlayers_.size();
    }
    /**
     * <code>repeated string waitingPlayers = 8;</code>
     * @param index The index of the element to return.
     * @return The waitingPlayers at the given index.
     */
    public String getWaitingPlayers(int index) {
      return waitingPlayers_.get(index);
    }
    /**
     * <code>repeated string waitingPlayers = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the waitingPlayers at the given index.
     */
    public com.google.protobuf.ByteString
        getWaitingPlayersBytes(int index) {
      return waitingPlayers_.getByteString(index);
    }
    /**
     * <code>repeated string waitingPlayers = 8;</code>
     * @param index The index to set the value at.
     * @param value The waitingPlayers to set.
     * @return This builder for chaining.
     */
    public Builder setWaitingPlayers(
        int index, String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureWaitingPlayersIsMutable();
      waitingPlayers_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string waitingPlayers = 8;</code>
     * @param value The waitingPlayers to add.
     * @return This builder for chaining.
     */
    public Builder addWaitingPlayers(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureWaitingPlayersIsMutable();
      waitingPlayers_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string waitingPlayers = 8;</code>
     * @param values The waitingPlayers to add.
     * @return This builder for chaining.
     */
    public Builder addAllWaitingPlayers(
        Iterable<String> values) {
      ensureWaitingPlayersIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, waitingPlayers_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string waitingPlayers = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearWaitingPlayers() {
      waitingPlayers_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string waitingPlayers = 8;</code>
     * @param value The bytes of the waitingPlayers to add.
     * @return This builder for chaining.
     */
    public Builder addWaitingPlayersBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureWaitingPlayersIsMutable();
      waitingPlayers_.add(value);
      onChanged();
      return this;
    }

    private long lastExecutionTime_ ;
    /**
     * <code>uint64 lastExecutionTime = 9;</code>
     * @return The lastExecutionTime.
     */
    @Override
    public long getLastExecutionTime() {
      return lastExecutionTime_;
    }
    /**
     * <code>uint64 lastExecutionTime = 9;</code>
     * @param value The lastExecutionTime to set.
     * @return This builder for chaining.
     */
    public Builder setLastExecutionTime(long value) {
      
      lastExecutionTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 lastExecutionTime = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearLastExecutionTime() {
      
      lastExecutionTime_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        String, AMCPlayerProto> allPlayers_;
    private com.google.protobuf.MapField<String, AMCPlayerProto>
    internalGetAllPlayers() {
      if (allPlayers_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AllPlayersDefaultEntryHolder.defaultEntry);
      }
      return allPlayers_;
    }
    private com.google.protobuf.MapField<String, AMCPlayerProto>
    internalGetMutableAllPlayers() {
      onChanged();;
      if (allPlayers_ == null) {
        allPlayers_ = com.google.protobuf.MapField.newMapField(
            AllPlayersDefaultEntryHolder.defaultEntry);
      }
      if (!allPlayers_.isMutable()) {
        allPlayers_ = allPlayers_.copy();
      }
      return allPlayers_;
    }

    public int getAllPlayersCount() {
      return internalGetAllPlayers().getMap().size();
    }
    /**
     * <code>map&lt;string, .com.nkasenides.amc.proto.AMCPlayerProto&gt; allPlayers = 10;</code>
     */

    @Override
    public boolean containsAllPlayers(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetAllPlayers().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAllPlayersMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, AMCPlayerProto> getAllPlayers() {
      return getAllPlayersMap();
    }
    /**
     * <code>map&lt;string, .com.nkasenides.amc.proto.AMCPlayerProto&gt; allPlayers = 10;</code>
     */
    @Override

    public java.util.Map<String, AMCPlayerProto> getAllPlayersMap() {
      return internalGetAllPlayers().getMap();
    }
    /**
     * <code>map&lt;string, .com.nkasenides.amc.proto.AMCPlayerProto&gt; allPlayers = 10;</code>
     */
    @Override

    public AMCPlayerProto getAllPlayersOrDefault(
        String key,
        AMCPlayerProto defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, AMCPlayerProto> map =
          internalGetAllPlayers().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .com.nkasenides.amc.proto.AMCPlayerProto&gt; allPlayers = 10;</code>
     */
    @Override

    public AMCPlayerProto getAllPlayersOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, AMCPlayerProto> map =
          internalGetAllPlayers().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearAllPlayers() {
      internalGetMutableAllPlayers().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .com.nkasenides.amc.proto.AMCPlayerProto&gt; allPlayers = 10;</code>
     */

    public Builder removeAllPlayers(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      internalGetMutableAllPlayers().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, AMCPlayerProto>
    getMutableAllPlayers() {
      return internalGetMutableAllPlayers().getMutableMap();
    }
    /**
     * <code>map&lt;string, .com.nkasenides.amc.proto.AMCPlayerProto&gt; allPlayers = 10;</code>
     */
    public Builder putAllPlayers(
        String key,
        AMCPlayerProto value) {
      if (key == null) { throw new NullPointerException(); }
      if (value == null) { throw new NullPointerException(); }
      internalGetMutableAllPlayers().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .com.nkasenides.amc.proto.AMCPlayerProto&gt; allPlayers = 10;</code>
     */

    public Builder putAllAllPlayers(
        java.util.Map<String, AMCPlayerProto> values) {
      internalGetMutableAllPlayers().getMutableMap()
          .putAll(values);
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.nkasenides.amc.proto.GameProto)
  }

  // @@protoc_insertion_point(class_scope:com.nkasenides.amc.proto.GameProto)
  private static final GameProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new GameProto();
  }

  public static GameProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GameProto>
      PARSER = new com.google.protobuf.AbstractParser<GameProto>() {
    @Override
    public GameProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GameProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GameProto> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<GameProto> getParserForType() {
    return PARSER;
  }

  @Override
  public GameProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

    @Override
    public com.nkasenides.amc.model.Game toObject() {    
        com.nkasenides.amc.model.Game item = new com.nkasenides.amc.model.Game();        
        item.setLastUpdated(getLastUpdated());        
        item.setChallengeID(getChallengeID());        
        java.util.ArrayList<String> finishedPlayersList = new java.util.ArrayList<>();        
        for (int i = 0; i < getFinishedPlayersCount(); i++) {        
            finishedPlayersList.add(getFinishedPlayers(i));            
        }        
        item.setFinishedPlayers(finishedPlayersList);        
        java.util.ArrayList<com.nkasenides.amc.model.PickableEntity> pickablesList = new java.util.ArrayList<>();        
        for (int i = 0; i < getPickablesCount(); i++) {        
            pickablesList.add(getPickables(i).toObject());            
        }        
        item.setPickables(pickablesList);        
        item.setId(getId());        
        java.util.ArrayList<String> queuedPlayersList = new java.util.ArrayList<>();        
        for (int i = 0; i < getQueuedPlayersCount(); i++) {        
            queuedPlayersList.add(getQueuedPlayers(i));            
        }        
        item.setQueuedPlayers(queuedPlayersList);        
        item.setCounter(getCounter());        
        java.util.ArrayList<String> waitingPlayersList = new java.util.ArrayList<>();        
        for (int i = 0; i < getWaitingPlayersCount(); i++) {        
            waitingPlayersList.add(getWaitingPlayers(i));            
        }        
        item.setWaitingPlayers(waitingPlayersList);        
        item.setLastExecutionTime(getLastExecutionTime());        
        java.util.HashMap<String,com.nkasenides.amc.model.AMCPlayer> allPlayersMap = new java.util.HashMap<>();        
        for (java.util.Map.Entry<String, AMCPlayerProto> entry : getAllPlayersMap().entrySet()) {
            allPlayersMap.put(entry.getKey(), entry.getValue().toObject());
        }
        item.setAllPlayers(allPlayersMap);
        return item;        
    }    
    
        public java.util.List<String> getFinishedPlayers() {
        return finishedPlayers_;
    }
    
        public java.util.List<PickableEntityProto> getPickables() {
        return pickables_;
    }
    
        public java.util.List<String> getQueuedPlayers() {
        return queuedPlayers_;
    }
    
        public java.util.List<String> getWaitingPlayers() {
        return waitingPlayers_;
    }
    
//        public java.util.Map<String, AMCPlayerProto> getAllPlayers() {
//        return allPlayers_;
//    }
    
}

