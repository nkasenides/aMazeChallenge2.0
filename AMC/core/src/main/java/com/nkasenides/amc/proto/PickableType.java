// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto/AMCProto.proto

package com.nkasenides.amc.proto;

/**
 * Protobuf enum {@code com.nkasenides.amc.proto.PickableType}
 */
public enum PickableType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>GRAPES_PickableType = 0;</code>
   */
  GRAPES_PickableType(0),
  /**
   * <code>APPLE_PickableType = 1;</code>
   */
  APPLE_PickableType(1),
  /**
   * <code>TRAP_PickableType = 2;</code>
   */
  TRAP_PickableType(2),
  /**
   * <code>WATERMELON_PickableType = 3;</code>
   */
  WATERMELON_PickableType(3),
  /**
   * <code>SPEEDHACK_PickableType = 4;</code>
   */
  SPEEDHACK_PickableType(4),
  /**
   * <code>COIN_10_PickableType = 5;</code>
   */
  COIN_10_PickableType(5),
  /**
   * <code>COIN_20_PickableType = 6;</code>
   */
  COIN_20_PickableType(6),
  /**
   * <code>PEACH_PickableType = 7;</code>
   */
  PEACH_PickableType(7),
  /**
   * <code>GIFTBOX_PickableType = 8;</code>
   */
  GIFTBOX_PickableType(8),
  /**
   * <code>COIN_5_PickableType = 9;</code>
   */
  COIN_5_PickableType(9),
  /**
   * <code>BANANA_PickableType = 10;</code>
   */
  BANANA_PickableType(10),
  /**
   * <code>BOMB_PickableType = 11;</code>
   */
  BOMB_PickableType(11),
  /**
   * <code>STRAWBERRY_PickableType = 12;</code>
   */
  STRAWBERRY_PickableType(12),
  /**
   * <code>ORANGE_PickableType = 13;</code>
   */
  ORANGE_PickableType(13),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>GRAPES_PickableType = 0;</code>
   */
  public static final int GRAPES_PickableType_VALUE = 0;
  /**
   * <code>APPLE_PickableType = 1;</code>
   */
  public static final int APPLE_PickableType_VALUE = 1;
  /**
   * <code>TRAP_PickableType = 2;</code>
   */
  public static final int TRAP_PickableType_VALUE = 2;
  /**
   * <code>WATERMELON_PickableType = 3;</code>
   */
  public static final int WATERMELON_PickableType_VALUE = 3;
  /**
   * <code>SPEEDHACK_PickableType = 4;</code>
   */
  public static final int SPEEDHACK_PickableType_VALUE = 4;
  /**
   * <code>COIN_10_PickableType = 5;</code>
   */
  public static final int COIN_10_PickableType_VALUE = 5;
  /**
   * <code>COIN_20_PickableType = 6;</code>
   */
  public static final int COIN_20_PickableType_VALUE = 6;
  /**
   * <code>PEACH_PickableType = 7;</code>
   */
  public static final int PEACH_PickableType_VALUE = 7;
  /**
   * <code>GIFTBOX_PickableType = 8;</code>
   */
  public static final int GIFTBOX_PickableType_VALUE = 8;
  /**
   * <code>COIN_5_PickableType = 9;</code>
   */
  public static final int COIN_5_PickableType_VALUE = 9;
  /**
   * <code>BANANA_PickableType = 10;</code>
   */
  public static final int BANANA_PickableType_VALUE = 10;
  /**
   * <code>BOMB_PickableType = 11;</code>
   */
  public static final int BOMB_PickableType_VALUE = 11;
  /**
   * <code>STRAWBERRY_PickableType = 12;</code>
   */
  public static final int STRAWBERRY_PickableType_VALUE = 12;
  /**
   * <code>ORANGE_PickableType = 13;</code>
   */
  public static final int ORANGE_PickableType_VALUE = 13;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static PickableType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static PickableType forNumber(int value) {
    switch (value) {
      case 0: return GRAPES_PickableType;
      case 1: return APPLE_PickableType;
      case 2: return TRAP_PickableType;
      case 3: return WATERMELON_PickableType;
      case 4: return SPEEDHACK_PickableType;
      case 5: return COIN_10_PickableType;
      case 6: return COIN_20_PickableType;
      case 7: return PEACH_PickableType;
      case 8: return GIFTBOX_PickableType;
      case 9: return COIN_5_PickableType;
      case 10: return BANANA_PickableType;
      case 11: return BOMB_PickableType;
      case 12: return STRAWBERRY_PickableType;
      case 13: return ORANGE_PickableType;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<PickableType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      PickableType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<PickableType>() {
          public PickableType findValueByNumber(int number) {
            return PickableType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.nkasenides.amc.proto.AMCProto.getDescriptor().getEnumTypes().get(12);
  }

  private static final PickableType[] VALUES = values();

  public static PickableType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private PickableType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.nkasenides.amc.proto.PickableType)
}

