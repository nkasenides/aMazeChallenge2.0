/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Framework: http://nkasenides.github.io/athlos
  Generated on: 24-08-2021 12:36:35
  Athlos Project Editor, v0.1.0 BETA
-------------------------------------------------------------------------------- */

package com.nkasenides.amc.model;

import com.nkasenides.athlos.proto.Transmittable;
import com.nkasenides.athlos.proto.GenericTransmittable;
import com.nkasenides.amc.proto.*;
import com.nkasenides.athlos.model.*;

public class PickableEntity implements AMCEntity, Transmittable<PickableEntityProto.Builder> {
    private String worldID;    
    private float areaOfInterest;    
    private PickableType pickableType;    
    private String id;    
    private MatrixPosition position;    
    private int state;    
    private String playerID;    
    private Direction4 direction;    

    public String getWorldID() {    
        return worldID;        
    }    
    
    public float getAreaOfInterest() {    
        return areaOfInterest;        
    }    
    
    public PickableType getPickableType() {    
        return pickableType;        
    }    
    
    public String getId() {    
        return id;        
    }    
    
    public MatrixPosition getPosition() {    
        return position;        
    }    
    
    public int getState() {    
        return state;        
    }    
    
    public String getPlayerID() {    
        return playerID;        
    }    
    
    public Direction4 getDirection() {    
        return direction;        
    }    
    

    public void setWorldID(String worldID) {    
        this.worldID = worldID;        
    }    
    
    public void setAreaOfInterest(float areaOfInterest) {    
        this.areaOfInterest = areaOfInterest;        
    }    
    
    public void setPickableType(PickableType pickableType) {    
        this.pickableType = pickableType;        
    }    
    
    public void setId(String id) {    
        this.id = id;        
    }    
    
    public void setPosition(MatrixPosition position) {    
        this.position = position;        
    }    
    
    public void setState(int state) {    
        this.state = state;        
    }    
    
    public void setPlayerID(String playerID) {    
        this.playerID = playerID;        
    }    
    
    public void setDirection(Direction4 direction) {    
        this.direction = direction;        
    }

    public void reduceState() {
        if (state > 0) state--;
    }
    

    @Override    
    public AMCEntityProto.Builder toGenericProto() {
        PickableEntityProto.Builder protoBuilder = PickableEntityProto.newBuilder();
        protoBuilder.setWorldID(worldID);        
        protoBuilder.setAreaOfInterest(areaOfInterest);        
        protoBuilder.setPickableType(pickableType);        
        protoBuilder.setId(id);        
        protoBuilder.setPosition(position.toProto().build());        
        protoBuilder.setState(state);        
        protoBuilder.setPlayerID(playerID);        
        protoBuilder.setDirection(direction);        
        return AMCEntityProto.newBuilder()        
                .setPickableEntity(protoBuilder.build())                
                .setWorldID(worldID)                
                .setAreaOfInterest(areaOfInterest)                
                .setId(id)                
                .setPosition(position.toProto().build())                
                .setPlayerID(playerID)                
                .setDirection(direction)                
                ;                
    }    
    
    @Override    
    public PickableEntityProto.Builder toProto() {
        PickableEntityProto.Builder protoBuilder = PickableEntityProto.newBuilder();
        protoBuilder.setWorldID(worldID);        
        protoBuilder.setAreaOfInterest(areaOfInterest);        
        protoBuilder.setPickableType(pickableType);        
        protoBuilder.setId(id);        
        protoBuilder.setPosition(position.toProto().build());        
        protoBuilder.setState(state);        
        protoBuilder.setPlayerID(playerID);        
        protoBuilder.setDirection(direction);        
        return protoBuilder;        
    }    

}
