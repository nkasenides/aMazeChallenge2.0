/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Framework: http://nkasenides.github.io/athlos
  Generated on: 12-08-2021 11:56:05
  Athlos Project Editor, v0.1.0 BETA
-------------------------------------------------------------------------------- */

package com.nkasenides.amc.model;

import com.nkasenides.athlos.proto.Transmittable;
import com.nkasenides.amc.proto.*;
import com.nkasenides.athlos.model.*;

import java.io.Serializable;

public class Health implements Transmittable<HealthProto.Builder>, Serializable {

    public static int DEFAULT_HEALTH = 100;
    public static int MIN_HEALTH = 0;
    public static int MAX_HEALTH = 200;

    private int health;

    public Health() {
        this.health = 100;
    }

    public Health(int health) {
        this.health = health;
    }

    public int getHealth() {
        return health;        
    }    
    

    public void setHealth(int health) {    
        this.health = health;        
    }

    public void setTo(int amount) {
        if (health > MAX_HEALTH) throw new RuntimeException("Health Error: Cannot set health above " + MAX_HEALTH + ". Current value is " + amount);
        else if (health < MIN_HEALTH) throw new RuntimeException("Health Error: Cannot set health below " + MIN_HEALTH + ". Current value is " + amount);
        else health = amount;
    }//end setTo()

    public void changeBy(int amount) {
        if (health + amount > MAX_HEALTH) health = MAX_HEALTH;
        else if (health + amount < MIN_HEALTH) health = MIN_HEALTH;
        else health += amount;
    }

    public void increaseBy(int amount) {
        if (amount < 0) throw new RuntimeException("Health Error: Cannot increase health by a negative number: " + amount);
        if (health + amount > MAX_HEALTH) health = MAX_HEALTH;
        else health += amount;
    }//end increaseBy()

    public void decreaseBy(int amount) {
        if (amount < 0) throw new RuntimeException("Health Error: Cannot decrease health by a negative number: " + amount);
        if (health - amount < MIN_HEALTH) health = MIN_HEALTH;
        else health -= amount;
    }//end decreaseBy()

    public void doubleHealth() {
        if (health * 2 > MAX_HEALTH) health = MAX_HEALTH;
        else health *= 2;
    }//end doubleHealth()

    public void halveHealth() {
        if (health / 2 < MIN_HEALTH) health = MIN_HEALTH; //This should never occur.
        else health /= 2;
    }//end halveHealth()

    public void resetHealth() { health = DEFAULT_HEALTH; }

    public boolean isAtMin() { return (health <= MIN_HEALTH); }

    @Override    
    public com.nkasenides.amc.proto.HealthProto.Builder toProto() {    
        com.nkasenides.amc.proto.HealthProto.Builder protoBuilder = com.nkasenides.amc.proto.HealthProto.newBuilder();        
        protoBuilder.setHealth(health);        
        return protoBuilder;        
    }    
    

}
