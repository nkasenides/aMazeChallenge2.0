// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto/AMCProto.proto

package com.nkasenides.amc.proto;

/**
 * Protobuf enum {@code com.nkasenides.amc.proto.Rotation}
 */
public enum Rotation
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>CLOCKWISE = 0;</code>
   */
  CLOCKWISE(0),
  /**
   * <code>COUNTER_CLOCKWISE = 1;</code>
   */
  COUNTER_CLOCKWISE(1),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CLOCKWISE = 0;</code>
   */
  public static final int CLOCKWISE_VALUE = 0;
  /**
   * <code>COUNTER_CLOCKWISE = 1;</code>
   */
  public static final int COUNTER_CLOCKWISE_VALUE = 1;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static Rotation valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Rotation forNumber(int value) {
    switch (value) {
      case 0: return CLOCKWISE;
      case 1: return COUNTER_CLOCKWISE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Rotation>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Rotation> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Rotation>() {
          public Rotation findValueByNumber(int number) {
            return Rotation.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return AMCProto.getDescriptor().getEnumTypes().get(18);
  }

  private static final Rotation[] VALUES = values();

  public static Rotation valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Rotation(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.nkasenides.amc.proto.Rotation)
}

