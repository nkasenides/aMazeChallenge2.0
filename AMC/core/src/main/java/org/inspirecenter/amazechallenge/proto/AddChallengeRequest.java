// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto/AMCProto.proto

package org.inspirecenter.amazechallenge.proto;

/**
 * Protobuf type {@code AddChallengeRequest}
 */
public final class AddChallengeRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:AddChallengeRequest)
    AddChallengeRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AddChallengeRequest.newBuilder() to construct.
  private AddChallengeRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AddChallengeRequest() {
    adminKey_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new AddChallengeRequest();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private AddChallengeRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            ChallengeProto.Builder subBuilder = null;
            if (challenge_ != null) {
              subBuilder = challenge_.toBuilder();
            }
            challenge_ = input.readMessage(ChallengeProto.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(challenge_);
              challenge_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            adminKey_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return AMCProto.internal_static_com_nkasenides_amc_proto_AddChallengeRequest_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return AMCProto.internal_static_com_nkasenides_amc_proto_AddChallengeRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            AddChallengeRequest.class, Builder.class);
  }

  public static final int CHALLENGE_FIELD_NUMBER = 1;
  private ChallengeProto challenge_;
  /**
   * <code>.ChallengeProto challenge = 1;</code>
   * @return Whether the challenge field is set.
   */
  @Override
  public boolean hasChallenge() {
    return challenge_ != null;
  }
  /**
   * <code>.ChallengeProto challenge = 1;</code>
   * @return The challenge.
   */
  @Override
  public ChallengeProto getChallenge() {
    return challenge_ == null ? ChallengeProto.getDefaultInstance() : challenge_;
  }
  /**
   * <code>.ChallengeProto challenge = 1;</code>
   */
  @Override
  public ChallengeProtoOrBuilder getChallengeOrBuilder() {
    return getChallenge();
  }

  public static final int ADMINKEY_FIELD_NUMBER = 2;
  private volatile Object adminKey_;
  /**
   * <code>string adminKey = 2;</code>
   * @return The adminKey.
   */
  @Override
  public String getAdminKey() {
    Object ref = adminKey_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      adminKey_ = s;
      return s;
    }
  }
  /**
   * <code>string adminKey = 2;</code>
   * @return The bytes for adminKey.
   */
  @Override
  public com.google.protobuf.ByteString
      getAdminKeyBytes() {
    Object ref = adminKey_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      adminKey_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (challenge_ != null) {
      output.writeMessage(1, getChallenge());
    }
    if (!getAdminKeyBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, adminKey_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (challenge_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getChallenge());
    }
    if (!getAdminKeyBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, adminKey_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof AddChallengeRequest)) {
      return super.equals(obj);
    }
    AddChallengeRequest other = (AddChallengeRequest) obj;

    if (hasChallenge() != other.hasChallenge()) return false;
    if (hasChallenge()) {
      if (!getChallenge()
          .equals(other.getChallenge())) return false;
    }
    if (!getAdminKey()
        .equals(other.getAdminKey())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasChallenge()) {
      hash = (37 * hash) + CHALLENGE_FIELD_NUMBER;
      hash = (53 * hash) + getChallenge().hashCode();
    }
    hash = (37 * hash) + ADMINKEY_FIELD_NUMBER;
    hash = (53 * hash) + getAdminKey().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static AddChallengeRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AddChallengeRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AddChallengeRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AddChallengeRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AddChallengeRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AddChallengeRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AddChallengeRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AddChallengeRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static AddChallengeRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static AddChallengeRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static AddChallengeRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AddChallengeRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(AddChallengeRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code AddChallengeRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:AddChallengeRequest)
      AddChallengeRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return AMCProto.internal_static_com_nkasenides_amc_proto_AddChallengeRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return AMCProto.internal_static_com_nkasenides_amc_proto_AddChallengeRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AddChallengeRequest.class, Builder.class);
    }

    // Construct using AddChallengeRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (challengeBuilder_ == null) {
        challenge_ = null;
      } else {
        challenge_ = null;
        challengeBuilder_ = null;
      }
      adminKey_ = "";

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return AMCProto.internal_static_com_nkasenides_amc_proto_AddChallengeRequest_descriptor;
    }

    @Override
    public AddChallengeRequest getDefaultInstanceForType() {
      return AddChallengeRequest.getDefaultInstance();
    }

    @Override
    public AddChallengeRequest build() {
      AddChallengeRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public AddChallengeRequest buildPartial() {
      AddChallengeRequest result = new AddChallengeRequest(this);
      if (challengeBuilder_ == null) {
        result.challenge_ = challenge_;
      } else {
        result.challenge_ = challengeBuilder_.build();
      }
      result.adminKey_ = adminKey_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof AddChallengeRequest) {
        return mergeFrom((AddChallengeRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(AddChallengeRequest other) {
      if (other == AddChallengeRequest.getDefaultInstance()) return this;
      if (other.hasChallenge()) {
        mergeChallenge(other.getChallenge());
      }
      if (!other.getAdminKey().isEmpty()) {
        adminKey_ = other.adminKey_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      AddChallengeRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (AddChallengeRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private ChallengeProto challenge_;
    private com.google.protobuf.SingleFieldBuilderV3<
        ChallengeProto, ChallengeProto.Builder, ChallengeProtoOrBuilder> challengeBuilder_;
    /**
     * <code>.ChallengeProto challenge = 1;</code>
     * @return Whether the challenge field is set.
     */
    public boolean hasChallenge() {
      return challengeBuilder_ != null || challenge_ != null;
    }
    /**
     * <code>.ChallengeProto challenge = 1;</code>
     * @return The challenge.
     */
    public ChallengeProto getChallenge() {
      if (challengeBuilder_ == null) {
        return challenge_ == null ? ChallengeProto.getDefaultInstance() : challenge_;
      } else {
        return challengeBuilder_.getMessage();
      }
    }
    /**
     * <code>.ChallengeProto challenge = 1;</code>
     */
    public Builder setChallenge(ChallengeProto value) {
      if (challengeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        challenge_ = value;
        onChanged();
      } else {
        challengeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.ChallengeProto challenge = 1;</code>
     */
    public Builder setChallenge(
        ChallengeProto.Builder builderForValue) {
      if (challengeBuilder_ == null) {
        challenge_ = builderForValue.build();
        onChanged();
      } else {
        challengeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.ChallengeProto challenge = 1;</code>
     */
    public Builder mergeChallenge(ChallengeProto value) {
      if (challengeBuilder_ == null) {
        if (challenge_ != null) {
          challenge_ =
            ChallengeProto.newBuilder(challenge_).mergeFrom(value).buildPartial();
        } else {
          challenge_ = value;
        }
        onChanged();
      } else {
        challengeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.ChallengeProto challenge = 1;</code>
     */
    public Builder clearChallenge() {
      if (challengeBuilder_ == null) {
        challenge_ = null;
        onChanged();
      } else {
        challenge_ = null;
        challengeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.ChallengeProto challenge = 1;</code>
     */
    public ChallengeProto.Builder getChallengeBuilder() {
      
      onChanged();
      return getChallengeFieldBuilder().getBuilder();
    }
    /**
     * <code>.ChallengeProto challenge = 1;</code>
     */
    public ChallengeProtoOrBuilder getChallengeOrBuilder() {
      if (challengeBuilder_ != null) {
        return challengeBuilder_.getMessageOrBuilder();
      } else {
        return challenge_ == null ?
            ChallengeProto.getDefaultInstance() : challenge_;
      }
    }
    /**
     * <code>.ChallengeProto challenge = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ChallengeProto, ChallengeProto.Builder, ChallengeProtoOrBuilder>
        getChallengeFieldBuilder() {
      if (challengeBuilder_ == null) {
        challengeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ChallengeProto, ChallengeProto.Builder, ChallengeProtoOrBuilder>(
                getChallenge(),
                getParentForChildren(),
                isClean());
        challenge_ = null;
      }
      return challengeBuilder_;
    }

    private Object adminKey_ = "";
    /**
     * <code>string adminKey = 2;</code>
     * @return The adminKey.
     */
    public String getAdminKey() {
      Object ref = adminKey_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        adminKey_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string adminKey = 2;</code>
     * @return The bytes for adminKey.
     */
    public com.google.protobuf.ByteString
        getAdminKeyBytes() {
      Object ref = adminKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        adminKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string adminKey = 2;</code>
     * @param value The adminKey to set.
     * @return This builder for chaining.
     */
    public Builder setAdminKey(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      adminKey_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string adminKey = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAdminKey() {
      
      adminKey_ = getDefaultInstance().getAdminKey();
      onChanged();
      return this;
    }
    /**
     * <code>string adminKey = 2;</code>
     * @param value The bytes for adminKey to set.
     * @return This builder for chaining.
     */
    public Builder setAdminKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      adminKey_ = value;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:AddChallengeRequest)
  }

  // @@protoc_insertion_point(class_scope:AddChallengeRequest)
  private static final AddChallengeRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AddChallengeRequest();
  }

  public static AddChallengeRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AddChallengeRequest>
      PARSER = new com.google.protobuf.AbstractParser<AddChallengeRequest>() {
    @Override
    public AddChallengeRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new AddChallengeRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<AddChallengeRequest> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<AddChallengeRequest> getParserForType() {
    return PARSER;
  }

  @Override
  public AddChallengeRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

