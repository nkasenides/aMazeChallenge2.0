/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Framework: http://nkasenides.github.io/athlos
  Generated on: 12-08-2021 11:56:05
  Athlos Project Editor, v0.1.0 BETA
-------------------------------------------------------------------------------- */

package com.nkasenides.amc.persistence;


import com.nkasenides.athlos.persistence.*;
import com.nkasenides.amc.model.*;
import com.raylabz.firestorm.Firestorm;
import com.raylabz.firestorm.FirestormBatch;

import java.util.List;
import java.util.Collection;


public class QuestionnaireEntryDAO implements MultiDAO<QuestionnaireEntry> {


    @Override
    public boolean create(QuestionnaireEntry object) {
        return Firestorm.create(object) != null;
    }

    @Override
    public boolean update(QuestionnaireEntry object) {
        Firestorm.update(object);
        return true;
    }

    @Override
    public boolean delete(QuestionnaireEntry object) {
        Firestorm.delete(object);
        return true;
    }

    @Override
    public QuestionnaireEntry get(String id) {
        return Firestorm.get(QuestionnaireEntry.class, id);
    }

    @Override
    public Collection<QuestionnaireEntry> getMany(String... ids) {
        return Firestorm.getMany(QuestionnaireEntry.class, ids);
    }

    @Override
    public Collection<QuestionnaireEntry> list() {
        return Firestorm.listAll(QuestionnaireEntry.class);
    }

    @Override
    public boolean create(Collection<QuestionnaireEntry> objects) {
        Firestorm.runBatch(new FirestormBatch() {
            @Override
            public void execute() {
                for (QuestionnaireEntry object : objects) {
                    create(object);
                }
            }

            @Override
            public void onFailure(Exception e) {

            }

            @Override
            public void onSuccess() {

            }
        });
        return true;
    }

    @Override
    public boolean update(Collection<QuestionnaireEntry> objects) {
        Firestorm.runBatch(new FirestormBatch() {
            @Override
            public void execute() {
                for (QuestionnaireEntry object : objects) {
                    update(object);
                }
            }

            @Override
            public void onFailure(Exception e) {

            }

            @Override
            public void onSuccess() {

            }
        });
        return true;
    }

    @Override
    public boolean delete(Collection<QuestionnaireEntry> objects) {
        Firestorm.runBatch(new FirestormBatch() {
            @Override
            public void execute() {
                for (QuestionnaireEntry object : objects) {
                    delete(object);
                }
            }

            @Override
            public void onFailure(Exception e) {

            }

            @Override
            public void onSuccess() {

            }
        });
        return true;
    }


}


