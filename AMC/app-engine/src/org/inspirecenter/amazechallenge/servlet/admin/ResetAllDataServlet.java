/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Framework: http://nkasenides.github.io/athlos
  Generated on: 17-08-2021 12:37:25
  Athlos Project Editor, v0.1.0 BETA
-------------------------------------------------------------------------------- */

package org.inspirecenter.amazechallenge.servlet.admin;

import com.google.appengine.api.memcache.MemcacheService;
import com.google.appengine.api.memcache.MemcacheServiceFactory;
import org.inspirecenter.amazechallenge.model.AMCWorldSession;
import org.inspirecenter.amazechallenge.model.AdminKey;
import org.inspirecenter.amazechallenge.model.Challenge;
import org.inspirecenter.amazechallenge.persistence.DBManager;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.Collection;
import java.util.List;

public class ResetAllDataServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {

        final String adminKey = req.getParameter("adminKey");

        final AdminKey adminKeyServer = DBManager.adminKey.get();

        if (adminKeyServer == null) {
            resp.getWriter().write("Error: No admin key on server");
            return;
        }

        if (!adminKeyServer.getId().equals(adminKey)) {
            resp.getWriter().write("Error: Invalid admin key");
            return;
        }

        //Reset memcache:
        final MemcacheService memcache = MemcacheServiceFactory.getMemcacheService();
        memcache.clearAll();

        //Reset DB data:
        final Collection<Challenge> challenges = DBManager.challenge.list();
        for (Challenge challenge : challenges) {
            DBManager.challenge.delete(challenge);
        }

        final List<AMCWorldSession> worldSessions = DBManager.worldSession.list();
        for (AMCWorldSession worldSession : worldSessions) {
            DBManager.worldSession.delete(worldSession);
        }

        //Note: The admin key will persist this reset.
        resp.getWriter().write("OK");

    }
}