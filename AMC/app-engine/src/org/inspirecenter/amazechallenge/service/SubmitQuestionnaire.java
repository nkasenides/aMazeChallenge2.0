/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Framework: http://nkasenides.github.io/athlos
  Generated on: 17-08-2021 12:37:25
  Athlos Project Editor, v0.1.0 BETA
-------------------------------------------------------------------------------- */

package org.inspirecenter.amazechallenge.service;
import org.inspirecenter.amazechallenge.auth.Auth;
import org.inspirecenter.amazechallenge.model.AMCWorldSession;
import org.inspirecenter.amazechallenge.model.QuestionnaireEntry;
import org.inspirecenter.amazechallenge.persistence.DBManager;
import com.nkasenides.athlos.backend.AthlosService;
import org.inspirecenter.amazechallenge.proto.SubmitQuestionnaireRequest;
import org.inspirecenter.amazechallenge.auth.*;
import org.inspirecenter.amazechallenge.proto.SubmitQuestionnaireResponse;

public class SubmitQuestionnaire implements AthlosService<SubmitQuestionnaireRequest, SubmitQuestionnaireResponse> {

    @Override    
    public SubmitQuestionnaireResponse serve(SubmitQuestionnaireRequest request, Object... additionalParams) {

        //Check world session ID:
        if (request.getWorldSessionID().isEmpty()) {
            return SubmitQuestionnaireResponse.newBuilder()
                    .setStatus(SubmitQuestionnaireResponse.Status.CANNOT_SUBMIT)
                    .setMessage("INVALID_WORLD_SESSION")
                    .build();
        }

        //Verify world session:
        final AMCWorldSession worldSession = Auth.verifyWorldSessionID(request.getWorldSessionID());
        if (worldSession == null) {
            return SubmitQuestionnaireResponse.newBuilder()
                    .setStatus(SubmitQuestionnaireResponse.Status.CANNOT_SUBMIT)
                    .setMessage("INVALID_WORLD_SESSION")
                    .build();
        }

        //Get questionnaire, save to DB:
        final QuestionnaireEntry questionnaireEntry = request.getQuestionnaireEntry().toObject();

        final boolean result = DBManager.questionnaireEntry.create(questionnaireEntry);
        if (result) {
            return SubmitQuestionnaireResponse.newBuilder()
                    .setStatus(SubmitQuestionnaireResponse.Status.OK)
                    .setMessage("OK")
                    .build();
        }
        else {
            return SubmitQuestionnaireResponse.newBuilder()
                    .setStatus(SubmitQuestionnaireResponse.Status.DATA_ERROR)
                    .setMessage("DATA_ERROR")
                    .build();
        }

    }
    
}

