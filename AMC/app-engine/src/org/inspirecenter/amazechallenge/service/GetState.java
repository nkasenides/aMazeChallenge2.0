/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Framework: http://nkasenides.github.io/athlos
  Generated on: 17-08-2021 12:37:25
  Athlos Project Editor, v0.1.0 BETA
-------------------------------------------------------------------------------- */

package org.inspirecenter.amazechallenge.service;
import org.inspirecenter.amazechallenge.auth.Auth;
import org.inspirecenter.amazechallenge.model.AMCWorldSession;
import org.inspirecenter.amazechallenge.proto.AMCPartialStateProto;
import org.inspirecenter.amazechallenge.state.State;
import com.nkasenides.athlos.backend.AthlosService;
import org.inspirecenter.amazechallenge.proto.GetStateRequest;
import org.inspirecenter.amazechallenge.auth.*;
import org.inspirecenter.amazechallenge.proto.GetStateResponse;

public class GetState implements AthlosService<GetStateRequest, GetStateResponse> {

    @Override    
    public GetStateResponse serve(GetStateRequest request, Object... additionalParams) {

        //Check world session ID:
        if (request.getWorldSessionID().isEmpty()) {
            return GetStateResponse.newBuilder()
                    .setStatus(GetStateResponse.Status.INVALID_DATA)
                    .setMessage("INVALID_WORLD_SESSION")
                    .build();
        }

        //Verify world session:
        final AMCWorldSession worldSession = Auth.verifyWorldSessionID(request.getWorldSessionID());
        if (worldSession == null) {
            return GetStateResponse.newBuilder()
                    .setStatus(GetStateResponse.Status.INVALID_DATA)
                    .setMessage("INVALID_WORLD_SESSION")
                    .build();
        }

        //Retrieve the partial state:
        final AMCPartialStateProto partialStateSnapshot = State.forWorld(worldSession.getWorldID()).getPartialStateSnapshot(worldSession);

        return GetStateResponse.newBuilder()
                .setStatus(GetStateResponse.Status.OK)
                .setMessage("OK")
                .setPartialState(partialStateSnapshot)
                .build();

    }    
    
}

