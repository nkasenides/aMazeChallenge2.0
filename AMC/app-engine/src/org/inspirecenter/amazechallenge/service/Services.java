/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Framework: http://nkasenides.github.io/athlos
  Generated on: 17-08-2021 12:37:25
  Athlos Project Editor, v0.1.0 BETA
-------------------------------------------------------------------------------- */

package org.inspirecenter.amazechallenge.service;

import org.inspirecenter.amazechallenge.*;
import com.google.protobuf.InvalidProtocolBufferException;
import com.nkasenides.athlos.exception.ServiceNotFoundException;
import org.inspirecenter.amazechallenge.proto.*;

public class Services {

    public static SubmitQuestionnaireResponse submitQuestionnaire(byte[] data, Object[] optionalParams) throws ServiceNotFoundException {
        try {        
            SubmitQuestionnaireRequest request = SubmitQuestionnaireRequest.parseFrom(data);            
            return new SubmitQuestionnaire().serve(request, optionalParams);            
        } catch (InvalidProtocolBufferException e) {        
            throw new ServiceNotFoundException("Your request data did not match the expected service request type (SubmitQuestionnaireRequest).", e);            
        }        
    }    
    
    public static ListChallengesResponse listChallenges(byte[] data, Object[] optionalParams) throws ServiceNotFoundException {
        try {        
            ListChallengesRequest request = ListChallengesRequest.parseFrom(data);            
            return new ListChallenges().serve(request, optionalParams);            
        } catch (InvalidProtocolBufferException e) {        
            throw new ServiceNotFoundException("Your request data did not match the expected service request type (ListChallengesRequest).", e);            
        }        
    }    
    
    public static SubmitCodeResponse submitCode(byte[] data, Object[] optionalParams) throws ServiceNotFoundException {
        try {        
            SubmitCodeRequest request = SubmitCodeRequest.parseFrom(data);            
            return new SubmitCode().serve(request, optionalParams);            
        } catch (InvalidProtocolBufferException e) {        
            throw new ServiceNotFoundException("Your request data did not match the expected service request type (SubmitCodeRequest).", e);            
        }        
    }    
    
    public static JoinChallengeResponse joinChallenge(byte[] data, Object[] optionalParams) throws ServiceNotFoundException {    
        try {        
            JoinChallengeRequest request = JoinChallengeRequest.parseFrom(data);
            return new JoinChallenge().serve(request, optionalParams);            
        } catch (InvalidProtocolBufferException e) {        
            throw new ServiceNotFoundException("Your request data did not match the expected service request type (JoinChallengeRequest).", e);            
        }        
    }    
    
    public static GetStateResponse getState(byte[] data, Object[] optionalParams) throws ServiceNotFoundException {    
        try {        
            GetStateRequest request = GetStateRequest.parseFrom(data);            
            return new GetState().serve(request, optionalParams);            
        } catch (InvalidProtocolBufferException e) {        
            throw new ServiceNotFoundException("Your request data did not match the expected service request type (GetStateRequest).", e);            
        }        
    }    
    
    public static UpdateStateResponse updateState(byte[] data, Object[] optionalParams) throws ServiceNotFoundException {
        try {
            UpdateStateRequest request = UpdateStateRequest.parseFrom(data);
            return new UpdateState().serve(request, optionalParams);
        } catch (InvalidProtocolBufferException e) {
            throw new ServiceNotFoundException("Your request data did not match the expected service request type (UpdateStateRequest).", e);
        }
    }
    
    public static SubscribeResponse subscribe(byte[] data, Object[] optionalParams) throws ServiceNotFoundException {    
        try {        
            SubscribeRequest request = SubscribeRequest.parseFrom(data);            
            return new Subscribe().serve(request, optionalParams);            
        } catch (InvalidProtocolBufferException e) {        
            throw new ServiceNotFoundException("Your request data did not match the expected service request type (SubscribeRequest).", e);            
        }        
    }    
    
    public static UnsubscribeResponse unsubscribe(byte[] data, Object[] optionalParams) throws ServiceNotFoundException {    
        try {        
            UnsubscribeRequest request = UnsubscribeRequest.parseFrom(data);
            return new Unsubscribe().serve(request, optionalParams);            
        } catch (InvalidProtocolBufferException e) {        
            throw new ServiceNotFoundException("Your request data did not match the expected service request type (UnsubscribeRequest).", e);            
        }        
    }    
    
    public static AddChallengeResponse addChallenge(byte[] data, Object[] optionalParams) throws ServiceNotFoundException {    
        try {        
            AddChallengeRequest request = AddChallengeRequest.parseFrom(data);            
            return new AddChallenge().serve(request, optionalParams);            
        } catch (InvalidProtocolBufferException e) {        
            throw new ServiceNotFoundException("Your request data did not match the expected service request type (AddChallengeRequest).", e);            
        }        
    }    
    

}
