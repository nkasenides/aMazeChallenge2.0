/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Framework: http://nkasenides.github.io/athlos
  Generated on: 17-08-2021 12:37:25
  Athlos Project Editor, v0.1.0 BETA
-------------------------------------------------------------------------------- */

package org.inspirecenter.amazechallenge.service;
import com.google.appengine.api.memcache.AsyncMemcacheService;
import com.google.appengine.api.memcache.MemcacheService;
import com.google.appengine.api.memcache.MemcacheServiceFactory;
import io.ably.lib.realtime.AblyRealtime;
import io.ably.lib.realtime.Channel;
import io.ably.lib.types.AblyException;
import org.inspirecenter.amazechallenge.auth.Auth;
import org.inspirecenter.amazechallenge.model.*;
import org.inspirecenter.amazechallenge.persistence.DBManager;
import org.inspirecenter.amazechallenge.persistence.KeyUtils;
import com.nkasenides.athlos.backend.AthlosService;
import org.inspirecenter.amazechallenge.proto.*;
import org.inspirecenter.amazechallenge.auth.*;

import java.util.*;

public class SubmitCode implements AthlosService<SubmitCodeRequest, SubmitCodeResponse> {

    @Override    
    public SubmitCodeResponse serve(SubmitCodeRequest request, Object... additionalParams) {

        //Check world session ID:
        if (request.getWorldSessionID().isEmpty()) {
            return SubmitCodeResponse.newBuilder()
                    .setStatus(SubmitCodeResponse.Status.INVALID_WORLD_SESSION)
                    .setMessage("INVALID_WORLD_SESSION")
                    .build();
        }

        //Verify world session:
        final AMCWorldSession worldSession = Auth.verifyWorldSessionID(request.getWorldSessionID());
        if (worldSession == null) {
            return SubmitCodeResponse.newBuilder()
                    .setStatus(SubmitCodeResponse.Status.INVALID_WORLD_SESSION)
                    .setMessage("INVALID_WORLD_SESSION")
                    .build();
        }

        //Code cannot be empty:
        final String code = request.getCode();
        if (code.isEmpty()) {
            return SubmitCodeResponse.newBuilder()
                    .setStatus(SubmitCodeResponse.Status.INVALID_CODE)
                    .setMessage("CODE_EMPTY")
                    .build();
        }

//        System.out.println(code);
        worldSession.setCode(code);

        //Save world session with code:
        DBManager.worldSession.update(worldSession);

        //Save code in MemCache:
        final MemcacheService memcache = MemcacheServiceFactory.getMemcacheService();
        memcache.put(KeyUtils.getCodeKey(worldSession.getWorldID(), worldSession.getPlayerID()), code);

        return SubmitCodeResponse.newBuilder()
                .setStatus(SubmitCodeResponse.Status.OK)
                .setMessage("OK")
                .build();

    }    
    
}

