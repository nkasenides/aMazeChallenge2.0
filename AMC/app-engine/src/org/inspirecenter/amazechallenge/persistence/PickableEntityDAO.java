/* --------------------------------------------------------------------------------
  This file was automatically generated by the Athlos Project Editor.
  Athlos Framework: http://nkasenides.github.io/athlos
  Generated on: 12-08-2021 11:56:05
  Athlos Project Editor, v0.1.0 BETA
-------------------------------------------------------------------------------- */

package org.inspirecenter.amazechallenge.persistence;


import com.nkasenides.athlos.persistence.*;
import org.inspirecenter.amazechallenge.model.*;
import com.raylabz.firestorm.Firestorm;
import com.raylabz.firestorm.QueryResult;
import org.inspirecenter.amazechallenge.model.PickableEntity;

import java.util.Collection;


public class PickableEntityDAO implements WorldBasedDAO<PickableEntity> {


    @Override
    public boolean create(PickableEntity object) {
        return Firestorm.create(object) != null;
    }

    @Override
    public boolean update(PickableEntity object) {
        Firestorm.update(object);
        return true;
    }

    @Override
    public boolean delete(PickableEntity object) {
        Firestorm.delete(object);
        return true;
    }

    @Override
    public PickableEntity get(String id) {
        return Firestorm.get(PickableEntity.class, id);
    }

    @Override
    public PickableEntity getForWorld(String worldID, String itemID) {
        final QueryResult<PickableEntity> fetch = Firestorm.filter(PickableEntity.class)
                .whereEqualTo("worldID", worldID)
                .whereEqualTo("id", itemID)
                .limit(1)
                .fetch();
        if (fetch.hasItems()) {
            return fetch.getItems().get(0);
        }
        return null;
    }

    @Override
    public Collection<PickableEntity> listForWorld(String worldID) {
        return Firestorm.filter(PickableEntity.class)
                .whereEqualTo("worldID", worldID)
                .fetch().getItems();
    }

    /**
     * Retrieves a player's entities within a specific world.
     * @param playerID The player's ID.
     * @param worldID The world ID.
     * @return Returns a collection of entities.
     */
    public Collection<PickableEntity> listForPlayerAndWorld(String playerID, String worldID) {
        return Firestorm.filter(PickableEntity.class)
                .whereEqualTo("worldID", worldID)
                .whereEqualTo("playerID", playerID)
                .fetch().getItems();
    }
    /**
     * Retrieves a player's entities.
     * @param playerID The player.
     * @return Returns a collection of entities.
     */
    public Collection<PickableEntity> listForPlayer(String playerID) {
        return Firestorm.filter(PickableEntity.class)
                .whereEqualTo("playerID", playerID)
                .fetch().getItems();
    }

}


